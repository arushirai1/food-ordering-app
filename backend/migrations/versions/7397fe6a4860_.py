"""empty message

Revision ID: 7397fe6a4860
Revises: 
Create Date: 2020-11-27 01:07:17.324758

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7397fe6a4860'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test',
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('name2', sa.String(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('test_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('address',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('address_line1', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('zip_code', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_table('credit_card',
    sa.Column('credit_id', sa.Integer(), nullable=False),
    sa.Column('customer_ID', sa.Integer(), nullable=True),
    sa.Column('card_number', sa.Integer(), nullable=True),
    sa.Column('expiration_date', sa.String(), nullable=True),
    sa.Column('cvv', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['customer_ID'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('credit_id')
    )
    op.create_table('order',
    sa.Column('order_ID', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('customer_ID', sa.Integer(), nullable=True),
    sa.Column('pickup_type', sa.String(), nullable=True),
    sa.Column('order_prediction_time', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['customer_ID'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('order_ID')
    )
    op.create_table('restaurant',
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('restaurant_id')
    )
    op.create_table('rewards',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('rewards_points', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('customer_id')
    )
    op.create_table('delivery',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.address_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.order_ID'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('dish',
    sa.Column('dish_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('cooking_time', sa.Numeric(), nullable=True),
    sa.Column('restaurant_id', sa.Integer(), nullable=True),
    sa.Column('special', sa.Boolean(), nullable=True),
    sa.Column('cost', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.restaurant_id'], ),
    sa.PrimaryKeyConstraint('dish_id')
    )
    op.create_table('payment',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('payment_type', sa.String(), nullable=True),
    sa.Column('cost', sa.Numeric(), nullable=True),
    sa.Column('final_price', sa.Numeric(), nullable=True),
    sa.Column('credit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['credit_id'], ['credit_card.credit_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.order_ID'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('processed_payment',
    sa.Column('order_ID', sa.Integer(), nullable=False),
    sa.Column('payment_status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['order_ID'], ['order.order_ID'], ),
    sa.PrimaryKeyConstraint('order_ID')
    )
    op.create_table('order_items',
    sa.Column('order_ID', sa.Integer(), nullable=False),
    sa.Column('dish_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dish_id'], ['dish.dish_id'], ),
    sa.ForeignKeyConstraint(['order_ID'], ['order.order_ID'], ),
    sa.PrimaryKeyConstraint('order_ID', 'dish_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_items')
    op.drop_table('processed_payment')
    op.drop_table('payment')
    op.drop_table('dish')
    op.drop_table('delivery')
    op.drop_table('rewards')
    op.drop_table('restaurant')
    op.drop_table('order')
    op.drop_table('credit_card')
    op.drop_table('address')
    op.drop_table('users')
    op.drop_table('test')
    # ### end Alembic commands ###
