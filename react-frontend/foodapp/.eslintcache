[{"/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/App.js":"1","/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/reportWebVitals.js":"2","/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/index.js":"3","/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/LandingPage.js":"4","/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/Models.js":"5","/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/MenuSelection.js":"6","/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/CheckoutScreen.js":"7","/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/config.js":"8"},{"size":6972,"mtime":1606972895075,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1606463327817,"results":"11","hashOfConfig":"10"},{"size":686,"mtime":1606544051106,"results":"12","hashOfConfig":"10"},{"size":9725,"mtime":1606945964965,"results":"13","hashOfConfig":"10"},{"size":1230,"mtime":1606942945136,"results":"14","hashOfConfig":"10"},{"size":2799,"mtime":1606721613301,"results":"15","hashOfConfig":"10"},{"size":7912,"mtime":1606938066406,"results":"16","hashOfConfig":"10"},{"size":209,"mtime":1606972781569,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"yvkrn8",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/App.js",["36","37","38","39","40","41","42"],"/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/reportWebVitals.js",[],"/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/index.js",[],["43","44"],"/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/LandingPage.js",["45","46","47","48","49","50","51"],"/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/Models.js",[],"/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/MenuSelection.js",["52","53","54","55","56","57","58"],"/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/CheckoutScreen.js",["59","60","61","62","63","64","65","66"],"import React, { Component, ListItem } from 'react'\nimport App from \"./App\";\nimport {Restaurant, credit_card, Address} from \"./Models\"\nimport { Form, Button, ButtonGroup, ToggleButton, InputGroup, Card, Modal } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom'\n\nclass CheckoutView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={'option':'Cash', 'selected_card': null, 'cards':[], 'addresses':[], 'selected_address': null, 'total_price':0, 'service':'Pickup', 'rewards': 223}\n        this._addAddress.bind(this)\n    }\n\n    componentDidMount() {\n        //api call to fetch restaurants\n        let credit_cards=[new credit_card(12, 1,1233435346,598), new credit_card(112, 1,1233437777,123)]\n        let addresses = [new Address(123, 1, '123 Fake St APT 3', 'Chicago', 'IL', 60616),\n        new Address(124, 1, '124 Fake St APT 2', 'Cupertino', 'CA', 95014)]\n        this.setState({'cards': credit_cards, 'addresses': addresses})\n        if(Object.keys(this.props.location.state).includes(\"selected_checkout\")) {\n            let that = this\n            that.totalCost = 0\n\n            let dictionary= this.props.location.state.selected_checkout\n            console.log(\"enters\")\n            Object.keys(dictionary).forEach((pair)=> that.totalCost+=(dictionary[pair].dish.cost* dictionary[pair].quantity))\n            this.setState({'total_price':that.totalCost})\n        }\n    }\n    _onOptionChange(method) {\n        this.setState({'option':method})\n    }\n    _filterCard(card) {\n        let str=card.toString()\n        let x = \"\"\n        for(let i=0; i<str.length; i++){\n            if(i+4 < str.length) {\n\n                x=x.concat(\"X\")\n\n            } else {\n                x=x.concat(str[i])\n            }\n\n        }\n        return x\n    }\n    _changeService(service) {\n        this.setState({'service': service})\n    }\n    _renderCreditInput (){\n        if(this.state.option === 'Credit Card') {\n            console.log(\"test\")\n            return (<div>\n                    <Form.Group controlId=\"paymentEnterCard\" style={{marginRight:\"20px\"}}>\n                        <Form.Label>\n                            Credit Card Information\n                        </Form.Label>\n                        <Form.Control key=\"cardno\" type=\"text\" placeholder=\"Enter credit card #\" />\n                        <Form.Control key=\"cvv\" type=\"text\" placeholder=\"Enter cvv\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"paymentSelectCard\">\n                        <Form.Label>Select existing card</Form.Label>\n                        <Form.Control as=\"select\">\n                            <option>None</option>\n\n                            {this.state.cards.map((card)=>(<option>{this._filterCard(card.card_number)}</option>))}\n                        </Form.Control>\n                    </Form.Group>\n                </div>\n            )\n        }\n    }\n    _checkOut() {\n        //send order\n        let wait_time=0\n        let copy_of_state = {...this.state}\n        if(Object.keys(this.props.location.state).includes(\"selected_checkout\")) {\n\n            let dictionary= this.props.location.state.selected_checkout\n            console.log(\"enters\")\n            Object.keys(dictionary).forEach((pair)=> (wait_time+=dictionary[pair].dish.cooking_time))\n        }\n        //back to home with modal open\n        this.props.history.push({\n            pathname: \"/listing\",\n            state: {\n                order: copy_of_state,\n                selected_items: this.props.location.state.selected_checkout,\n                wait_time: wait_time,\n                modal: true\n            }\n        })\n    }\n    _useRewards() {\n        this.setState({'total_price': this.state.total_price - Math.floor(this.state.rewards/100), 'rewards':this.state.rewards%100})\n    }\n    _addAddress() {\n    //const selectedIndex = event.target.options.selectedIndex;\n        let id=Math.floor(Math.random() * 200)\n        let address=new Address( id, 1, document.getElementById('addLine1').value, document.getElementById('state').value, document.getElementById('zip').value);\n        console.log(this.state.addresses.push(address))\n        console.log(this.state.addresses)\n        this.setState({selected_address:address})\n    }\n    _getDefault() {\n        if(this.state.selected_address) {\n            return this.state.selected_address.address_line1\n        }\n        return \"None\"\n    }\n        _renderAddress (){\n            if(this.state.service === 'Delivery') {\n                return (<div>\n                        <h1>Address Info</h1>\n                        <Form.Group controlId=\"address\" style={{marginRight:\"20px\"}}>\n                            <Form.Label>\n                                Enter Address OR\n                            </Form.Label>\n                            <Form.Control id=\"addLine1\" type=\"text\" placeholder=\"Enter address line 1\" />\n                            <Form.Control id=\"state\" type=\"text\" placeholder=\"Enter state\" />\n                            <Form.Control id=\"zip\" type=\"text\" placeholder=\"Enter zip\" />\n\n                        </Form.Group>\n                        <Button onClick={this._addAddress.bind(this)}>Add Address</Button>\n                        <Form.Group controlId=\"addressSelect\">\n                            <Form.Label>Select existing address</Form.Label>\n                            <Form.Control as=\"select\">\n                                <option>{this._getDefault()}</option>\n                                {this.state.addresses.map((card)=>(<option>{card.address_line1}</option>))}\n                            </Form.Control>\n                        </Form.Group>\n                    </div>\n                )\n            }\n    }\n    render() {\n        return (<div>\n            <div>            <h1>Rewards: {this.state.rewards}</h1> <Button onClick={this._useRewards.bind(this)}>Apply Rewards</Button> </div>\n            <h1>Total Price: ${this.state.total_price} </h1>\n            <h3>Potential Rewards from this order: {Math.floor(this.state.total_price/2)}</h3>\n            <h1>Payment</h1>\n                <Form.Group controlId=\"choosePaymentMethod\">\n                    <Form.Label>\n                        Select Payment Method\n                    </Form.Label>\n                    <br/>\n                    {['radio'].map((type) => (\n                        <ButtonGroup style={{marginBottom:\"20px\"}}>\n                            {['Cash', 'Credit Card'].map((method) => (\n                                <ToggleButton style={{backgroundColor:'green'}} onClick={this._onOptionChange.bind(this, method)} checked={this.state.option === method} type={type} value={method}>{method}</ToggleButton>\n                            ))}\n                        </ButtonGroup>\n                    ))}\n                </Form.Group>\n                { this._renderCreditInput()}\n                <Form.Group controlId=\"serviceMethod\">\n                    <Form.Label>\n                        How will you receive your order\n                    </Form.Label>\n                    <br/>\n                    {['radio'].map((type) => (\n                        <ButtonGroup style={{marginBottom:\"20px\"}}>\n                            {['Pickup', 'Delivery', 'Dine In'].map((method) => (\n                                <ToggleButton style={{backgroundColor:'green'}} onClick={this._changeService.bind(this, method)} checked={this.state.service === method} type={type} value={method}>{method}</ToggleButton>\n                            ))}\n                        </ButtonGroup>\n                    ))}\n                </Form.Group>\n            {this._renderAddress()}\n\n        <div>            <Button>Go Back</Button>\n\n            <Button style={{marginLeft:\"20px\"}} onClick={this._checkOut.bind(this)}>Checkout</Button>\n            </div>\n        </div>)\n    }\n\n}\n\nexport {CheckoutView}","/Users/arushirai/PycharmProjects/food-app/react-frontend/foodapp/src/config.js",["67"],{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":12},{"ruleId":"68","severity":1,"message":"72","line":4,"column":17,"nodeType":"70","messageId":"71","endLine":4,"endColumn":26},{"ruleId":"68","severity":1,"message":"73","line":6,"column":26,"nodeType":"70","messageId":"71","endLine":6,"endColumn":38},{"ruleId":"68","severity":1,"message":"74","line":6,"column":40,"nodeType":"70","messageId":"71","endLine":6,"endColumn":52},{"ruleId":"75","severity":1,"message":"76","line":72,"column":50,"nodeType":"77","messageId":"78","endLine":72,"endColumn":51},{"ruleId":"75","severity":1,"message":"76","line":78,"column":50,"nodeType":"77","messageId":"78","endLine":78,"endColumn":51},{"ruleId":"68","severity":1,"message":"79","line":162,"column":10,"nodeType":"70","messageId":"71","endLine":162,"endColumn":18},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"68","severity":1,"message":"72","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"68","severity":1,"message":"84","line":1,"column":28,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"85","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":11},{"ruleId":"68","severity":1,"message":"86","line":4,"column":24,"nodeType":"70","messageId":"71","endLine":4,"endColumn":35},{"ruleId":"68","severity":1,"message":"87","line":4,"column":37,"nodeType":"70","messageId":"71","endLine":4,"endColumn":49},{"ruleId":"68","severity":1,"message":"88","line":4,"column":51,"nodeType":"70","messageId":"71","endLine":4,"endColumn":61},{"ruleId":"68","severity":1,"message":"89","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":20},{"ruleId":"68","severity":1,"message":"72","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"68","severity":1,"message":"85","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":11},{"ruleId":"68","severity":1,"message":"90","line":3,"column":9,"nodeType":"70","messageId":"71","endLine":3,"endColumn":19},{"ruleId":"68","severity":1,"message":"91","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":14},{"ruleId":"68","severity":1,"message":"86","line":4,"column":24,"nodeType":"70","messageId":"71","endLine":4,"endColumn":35},{"ruleId":"68","severity":1,"message":"87","line":4,"column":37,"nodeType":"70","messageId":"71","endLine":4,"endColumn":49},{"ruleId":"68","severity":1,"message":"88","line":4,"column":51,"nodeType":"70","messageId":"71","endLine":4,"endColumn":61},{"ruleId":"68","severity":1,"message":"72","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"68","severity":1,"message":"84","line":1,"column":28,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"85","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":11},{"ruleId":"68","severity":1,"message":"90","line":3,"column":9,"nodeType":"70","messageId":"71","endLine":3,"endColumn":19},{"ruleId":"68","severity":1,"message":"88","line":4,"column":51,"nodeType":"70","messageId":"71","endLine":4,"endColumn":61},{"ruleId":"68","severity":1,"message":"92","line":4,"column":63,"nodeType":"70","messageId":"71","endLine":4,"endColumn":67},{"ruleId":"68","severity":1,"message":"93","line":4,"column":69,"nodeType":"70","messageId":"71","endLine":4,"endColumn":74},{"ruleId":"68","severity":1,"message":"89","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":4,"column":45,"nodeType":"77","messageId":"96","endLine":4,"endColumn":47},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'StaffLanding' is defined but never used.","'AdminLanding' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'HomePage' is defined but never used.","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"'ListItem' is defined but never used.","'App' is defined but never used.","'ButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","'InputGroup' is defined but never used.","'withRouter' is defined but never used.","'Restaurant' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'Modal' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-global-assign","no-unsafe-negation"]